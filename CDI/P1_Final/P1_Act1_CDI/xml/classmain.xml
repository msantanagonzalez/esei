<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmain" kind="class" language="Java" prot="public">
    <compoundname>main</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmain_1a5945ee2d81ddf885a9026f9bdb342fdf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void main.waitUntilFinished</definition>
        <argsstring>(ArrayList&lt; Thread &gt; myThreads)</argsstring>
        <name>waitUntilFinished</name>
        <param>
          <type>ArrayList&lt; Thread &gt;</type>
          <declname>myThreads</declname>
        </param>
        <briefdescription>
<para>Method waitUntilFinished.Wait until they stop running the threads, and then deletes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Array</parametername>
</parameternamelist>
<parameterdescription>
<para>of threads </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void  public static </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.java" line="20" column="1" bodyfile="src/main.java" bodystart="20" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classmain_1a0877f3b412d48b8c92fa25c4b98c2f5a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void main.main</definition>
        <argsstring>(String[] args)</argsstring>
        <name>main</name>
        <param>
          <type>String[]</type>
          <declname>args</declname>
        </param>
        <exceptions> throws InterruptedException,ArrayIndexOutOfBoundsException </exceptions>
        <briefdescription>
<para>Method Main of the project, where other programs are initialized. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InterruptedException</parametername>
<parametername>ArrayIndexOutOfBoundsException</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void  public static </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>Case 1.2 .A thread is created using the Thread class and Runnable interface</para><para>Create the threads</para><para>Start the threads</para><para>Wait until there큦 no running threads</para><para>Case 1.3 .A thread is created using the Thread class and Runnable interface, and when running displays a message on screen after one second</para><para>Create the threads</para><para>Start the threads</para><para>Wait until there큦 no running threads</para><para>Case 1.4 .A thread is created using the Runnable interface, and list the threads what are running on screen</para><para>Create the thread</para><para>Start the thread</para><para>List the threads what are running on screen</para><para>Wait until there큦 no running thread</para><para>Case 2.1 .From the command line parameters receive few threads to create, the program will create and execute the indicated number of threads and show a messages on the screen.</para><para>It creates the number of threads specified and start the threads</para><para>Wait until there큦 no running threads</para><para>Case 2.2 .From the command line parameters receive few threads to create, the program will create and execute the indicated number of threads and show a runtime each thread on the screen.</para><para>It creates the number of threads specified and start the threads</para><para>Wait until there큦 no running threads</para><para>Case 2.4 .From the command line parameters receive few threads to create, the program will create and execute the indicated number of threads and displays the total time it takes to run all the threads on the screen.</para><para>It creates the number of threads specified and start the threads</para><para>Wait until there큦 no running threads</para><para>Calculates and displays the total run time of the threads</para><para>Case 2.5 .In this case displays the creation time and execution of the threads on the screen.</para><para>It creates the number of threads specified and start the threads</para><para>Calculates and displays the creation time and execution time of the threads</para><para>Case 2.6 .The program creates and executes a growing number of threads, displaying messages on screen and performing mathematical operations and shows a graph in which the number of threads in relation compared with the runtime</para><para>It creates the number of threads specified and start the threads</para><para>Wait until there큦 no running threads</para><para>Creates the main frame(Window)</para><para>Case 3.2 .The program create and execute the threads and show the difference between the interrupted () and interrupted () methods</para><para>Create and start the thread</para><para>Use of method isInterrupted()</para><para>Create and start the thread</para><para>Use of method interrupted()</para><para>Wait until there큦 no running threads</para><para>Case 3.3 .The program create and execute the thread and and waits for a possible signal to be interrupted.</para><para>Create and start the thread</para><para>Case 3.3 .The program create and execute the thread and and waits for a possible signal to be interrupted by the user .</para><para>Wait until there큦 no running threads</para>        </inbodydescription>
        <location file="src/main.java" line="40" column="1" bodyfile="src/main.java" bodystart="40" bodyend="464"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main.java" line="11" column="1" bodyfile="src/main.java" bodystart="11" bodyend="466"/>
    <listofallmembers>
      <member refid="classmain_1a0877f3b412d48b8c92fa25c4b98c2f5a" prot="public" virt="non-virtual"><scope>main</scope><name>main</name></member>
      <member refid="classmain_1a5945ee2d81ddf885a9026f9bdb342fdf" prot="public" virt="non-virtual"><scope>main</scope><name>waitUntilFinished</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
